{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 The Registry Operator provides Kubernetes integration with Container Registries. The purpose of this project is to simplify and automate the configuration of external Container Registries for Kubernetes clusters. Getting started \u00b6 See Deployment to start using the Registry Operator.","title":"Welcome"},{"location":"#introduction","text":"The Registry Operator provides Kubernetes integration with Container Registries. The purpose of this project is to simplify and automate the configuration of external Container Registries for Kubernetes clusters.","title":"Introduction"},{"location":"#getting-started","text":"See Deployment to start using the Registry Operator.","title":"Getting started"},{"location":"_navbar/","text":"Home","title":" navbar"},{"location":"compatibility/","text":"Compatibility \u00b6 The Registry Operator is compatible with Kubernetes and OpenShift clusters. Distribution Min version Max version Kubernetes 1.16 1.20 OpenShift 4.1 4.7","title":"Compatibility"},{"location":"compatibility/#compatibility","text":"The Registry Operator is compatible with Kubernetes and OpenShift clusters. Distribution Min version Max version Kubernetes 1.16 1.20 OpenShift 4.1 4.7","title":"Compatibility"},{"location":"crd/registry-credentials/","text":"RegistryCredentials \u00b6 Description \u00b6 RegistryCredentials represents the credentials required to authenticate to a remote Container Registry. Specification \u00b6 Property Type Required Description .apiVersion string yes Defines the versioned schema of this object. .kind string yes RegistryCredentials .spec \u00b6 Property Type Required Description provider object yes The provider object imageSelector object no List of regexp to match images .spec.awsElasticContainerRegistry \u00b6 Property Type Required Description accessKeyID string yes AWS Access Key ID secretAccessKey string yes AWS Secret Access Key region string yes AWS Region .spec.imageSelector \u00b6 Property Type Required Description matchRegexp array (string) no Comma separated list of regexp to match container images. matchEquals array (string) no Comma separated list of images to match container images. .status \u00b6 Property Type Required Description state string no The current state of the object: Authenticating, Aunthenticated, Unauthorized, Errored, Terminating. errorMessage string no The message returned when in Error phase expirationTime time no The expiration time. authenticatedTime time no The authenticated time.","title":"RegistryCredentials"},{"location":"crd/registry-credentials/#registrycredentials","text":"","title":"RegistryCredentials"},{"location":"crd/registry-credentials/#description","text":"RegistryCredentials represents the credentials required to authenticate to a remote Container Registry.","title":"Description"},{"location":"crd/registry-credentials/#specification","text":"Property Type Required Description .apiVersion string yes Defines the versioned schema of this object. .kind string yes RegistryCredentials","title":"Specification"},{"location":"crd/registry-credentials/#spec","text":"Property Type Required Description provider object yes The provider object imageSelector object no List of regexp to match images","title":".spec"},{"location":"crd/registry-credentials/#specawselasticcontainerregistry","text":"Property Type Required Description accessKeyID string yes AWS Access Key ID secretAccessKey string yes AWS Secret Access Key region string yes AWS Region","title":".spec.awsElasticContainerRegistry"},{"location":"crd/registry-credentials/#specimageselector","text":"Property Type Required Description matchRegexp array (string) no Comma separated list of regexp to match container images. matchEquals array (string) no Comma separated list of images to match container images.","title":".spec.imageSelector"},{"location":"crd/registry-credentials/#status","text":"Property Type Required Description state string no The current state of the object: Authenticating, Aunthenticated, Unauthorized, Errored, Terminating. errorMessage string no The message returned when in Error phase expirationTime time no The expiration time. authenticatedTime time no The authenticated time.","title":".status"},{"location":"deployment/kubernetes/","text":"Kubernetes \u00b6 The Registry Operator can be deployed in any Kubernetes distribution. Kubectl \u00b6 Prerequisites \u00b6 A Kubernetes cluster kubectl installed installed in your machine Procedure \u00b6 Apply the YAML manifests from the Github repository: kubectl apply -f https://... Helm \u00b6 Prerequisites \u00b6 A Kubernetes cluster kubectl installed installed in your machine Helm client installed in your machine Procedure \u00b6 Add the Helm Repository: helm repo add astrokube https://astrokube.github.io/charts Install the Chart: helm install registry-operator astrokube/registry-operator","title":"Kubernetes"},{"location":"deployment/kubernetes/#kubernetes","text":"The Registry Operator can be deployed in any Kubernetes distribution.","title":"Kubernetes"},{"location":"deployment/kubernetes/#kubectl","text":"","title":"Kubectl"},{"location":"deployment/kubernetes/#prerequisites","text":"A Kubernetes cluster kubectl installed installed in your machine","title":"Prerequisites"},{"location":"deployment/kubernetes/#procedure","text":"Apply the YAML manifests from the Github repository: kubectl apply -f https://...","title":"Procedure"},{"location":"deployment/kubernetes/#helm","text":"","title":"Helm"},{"location":"deployment/kubernetes/#prerequisites_1","text":"A Kubernetes cluster kubectl installed installed in your machine Helm client installed in your machine","title":"Prerequisites"},{"location":"deployment/kubernetes/#procedure_1","text":"Add the Helm Repository: helm repo add astrokube https://astrokube.github.io/charts Install the Chart: helm install registry-operator astrokube/registry-operator","title":"Procedure"},{"location":"deployment/openshift/","text":"OpenShift \u00b6 OC \u00b6 oc apply -f https://...","title":"OpenShift"},{"location":"deployment/openshift/#openshift","text":"","title":"OpenShift"},{"location":"deployment/openshift/#oc","text":"oc apply -f https://...","title":"OC"},{"location":"development/getting-started/","text":"Getting started \u00b6 This document helps you on start developing for Registry Operator. Prerequisites \u00b6 Install Go 1.15 or later. Install Docker. Install kubebuilder. Quick start \u00b6 Fork the repository Clone the repository to your local machine Run locally \u00b6 Start the controller locally with the following command: make run Testing \u00b6 Start the tests with the following command: make test","title":"Getting started"},{"location":"development/getting-started/#getting-started","text":"This document helps you on start developing for Registry Operator.","title":"Getting started"},{"location":"development/getting-started/#prerequisites","text":"Install Go 1.15 or later. Install Docker. Install kubebuilder.","title":"Prerequisites"},{"location":"development/getting-started/#quick-start","text":"Fork the repository Clone the repository to your local machine","title":"Quick start"},{"location":"development/getting-started/#run-locally","text":"Start the controller locally with the following command: make run","title":"Run locally"},{"location":"development/getting-started/#testing","text":"Start the tests with the following command: make test","title":"Testing"},{"location":"development/guide/","text":"Development \u00b6 Run locally \u00b6 make run Deploy in Kubernetes \u00b6 make docker-build make docker-push make install Remove from Kubernetes \u00b6 make uninstall","title":"Development"},{"location":"development/guide/#development","text":"","title":"Development"},{"location":"development/guide/#run-locally","text":"make run","title":"Run locally"},{"location":"development/guide/#deploy-in-kubernetes","text":"make docker-build make docker-push make install","title":"Deploy in Kubernetes"},{"location":"development/guide/#remove-from-kubernetes","text":"make uninstall","title":"Remove from Kubernetes"},{"location":"examples/ecr-credentials/","text":"RegistryCredentials \u00b6 Simple \u00b6 apiVersion : registry.astrokube.com/v1alpha1 kind : RegistryCredentials metadata : name : sample spec : provider : awsElasticContainerRegistry : accessKeyId : XXXXXXXXXXXXXXXXXXXX secretAccessKey : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX region : eu-central-1 With imageSelector \u00b6 apiVersion : registry.astrokube.com/v1alpha1 kind : RegistryCredentials metadata : name : sample spec : provider : awsElasticContainerRegistry : accessKeyId : XXXXXXXXXXXXXXXXXXXX secretAccessKey : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX region : eu-central-1 imageSelector : matchEquals : - 111111111111.dkr.ecr.eu-central-1.amazonaws.com/myimage","title":"RegistryCredentials"},{"location":"examples/ecr-credentials/#registrycredentials","text":"","title":"RegistryCredentials"},{"location":"examples/ecr-credentials/#simple","text":"apiVersion : registry.astrokube.com/v1alpha1 kind : RegistryCredentials metadata : name : sample spec : provider : awsElasticContainerRegistry : accessKeyId : XXXXXXXXXXXXXXXXXXXX secretAccessKey : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX region : eu-central-1","title":"Simple"},{"location":"examples/ecr-credentials/#with-imageselector","text":"apiVersion : registry.astrokube.com/v1alpha1 kind : RegistryCredentials metadata : name : sample spec : provider : awsElasticContainerRegistry : accessKeyId : XXXXXXXXXXXXXXXXXXXX secretAccessKey : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX region : eu-central-1 imageSelector : matchEquals : - 111111111111.dkr.ecr.eu-central-1.amazonaws.com/myimage","title":"With imageSelector"},{"location":"user-guide/","text":"User guide \u00b6","title":"User guide"},{"location":"user-guide/#user-guide","text":"","title":"User guide"},{"location":"user-guide/aws-ecr-policy/","text":"AWS ECR Policy \u00b6 The AWS Access Key provided in the RegistryCredentials objects require the following IAM Policy: { \"Statement\" : [ { \"Action\" : [ \"ecr:BatchCheckLayerAvailability\" , \"ecr:BatchGetImage\" , \"ecr:DescribeImages\" , \"ecr:DescribeRepositories\" , \"ecr:GetAuthorizationToken\" , \"ecr:GetDownloadUrlForLayer\" , \"ecr:ListImages\" ], \"Effect\" : \"Allow\" , \"Resource\" : [ \"*\" ] } ], \"Version\" : \"2012-10-17\" }","title":"AWS ECR Policy"},{"location":"user-guide/aws-ecr-policy/#aws-ecr-policy","text":"The AWS Access Key provided in the RegistryCredentials objects require the following IAM Policy: { \"Statement\" : [ { \"Action\" : [ \"ecr:BatchCheckLayerAvailability\" , \"ecr:BatchGetImage\" , \"ecr:DescribeImages\" , \"ecr:DescribeRepositories\" , \"ecr:GetAuthorizationToken\" , \"ecr:GetDownloadUrlForLayer\" , \"ecr:ListImages\" ], \"Effect\" : \"Allow\" , \"Resource\" : [ \"*\" ] } ], \"Version\" : \"2012-10-17\" }","title":"AWS ECR Policy"},{"location":"user-guide/aws-ecr/","text":"Integrate AWS ECR \u00b6 You can integrate AWS ECR in a single Namespace by creating a RegistryCredentials object. Prerequisites \u00b6 You have already created an AWS Access Key with Read access level to Elastic Container Registry. Check the IAM Policy details . Procedure \u00b6 Create the following YAML manifest. In this example the file si called ecr-credentials.yaml : apiVersion : registry.astrokube.com/v1alpha1 kind : RegistryCredentials metadata : name : sample spec : accessKeyId : XXXXXXXXXXXXXXXXXXXX secretAccessKey : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX region : eu-central-1 Apply the configuration to create the RegistryCredentials object: kubectl apply -f ecr-credentials.yaml Verify the RegistryCredentials is authenticated: kubectl get registrycredentials Example output NAME STATUS sample Authenticated NOTE: The status will be set as Unauthorized if your put the wrong AWS Access Key or if it hasn't the correct IAM Policy attached. Once the RegistryCredentials object is Authenticated, a new secret will be created and can be used for the ImagePullPolicy. You can verify the secret has been created with the following command: kubectl get secrets sample Example output NAME TYPE DATA AGE sample kubernetes.io/dockerconfigjson 1 5s","title":"Integrate AWS ECR"},{"location":"user-guide/aws-ecr/#integrate-aws-ecr","text":"You can integrate AWS ECR in a single Namespace by creating a RegistryCredentials object.","title":"Integrate AWS ECR"},{"location":"user-guide/aws-ecr/#prerequisites","text":"You have already created an AWS Access Key with Read access level to Elastic Container Registry. Check the IAM Policy details .","title":"Prerequisites"},{"location":"user-guide/aws-ecr/#procedure","text":"Create the following YAML manifest. In this example the file si called ecr-credentials.yaml : apiVersion : registry.astrokube.com/v1alpha1 kind : RegistryCredentials metadata : name : sample spec : accessKeyId : XXXXXXXXXXXXXXXXXXXX secretAccessKey : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX region : eu-central-1 Apply the configuration to create the RegistryCredentials object: kubectl apply -f ecr-credentials.yaml Verify the RegistryCredentials is authenticated: kubectl get registrycredentials Example output NAME STATUS sample Authenticated NOTE: The status will be set as Unauthorized if your put the wrong AWS Access Key or if it hasn't the correct IAM Policy attached. Once the RegistryCredentials object is Authenticated, a new secret will be created and can be used for the ImagePullPolicy. You can verify the secret has been created with the following command: kubectl get secrets sample Example output NAME TYPE DATA AGE sample kubernetes.io/dockerconfigjson 1 5s","title":"Procedure"},{"location":"user-guide/ecr/","text":"Elastic Container Registry \u00b6","title":"Elastic Container Registry"},{"location":"user-guide/ecr/#elastic-container-registry","text":"","title":"Elastic Container Registry"}]}